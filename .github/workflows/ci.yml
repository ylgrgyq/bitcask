name: CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: ${{ matrix.make.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
        make:
          - name: Clippy
            task: "check-clippy"
          - name: Unit tests
            task: "build-all-test run-all-unit-test"
          - name: Doc tests
            task: "run-all-doc-test"
        exclude:
          - os: macos-latest
            rust: stable
            make:
              name: Clippy
    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                        ${{ runner.os }}-cargo-
      - name: ${{ matrix.make.name }}
        run: make ${{ matrix.make.task }}
  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.76.0
          override: true
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: ubuntu-latest
      - name: Install grcov
        run: if [[ ! -e ~/.cargo/bin/grcov ]]; then cargo install --locked grcov; fi
      - name: Run tests
        run: |
          make test_matrix
        env:
          RUSTFLAGS: '-Zinstrument-coverage'
          LLVM_PROFILE_FILE: '%p-%m.profraw'
          EXTRA_CARGO_ARGS: '--verbose'
      - name: Run grcov
        run: grcov `find . \( -name "*.profraw" \) -print` --binary-path target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o coverage.lcov
      - name: Upload
        uses: codecov/codecov-action@v2
        with:
          file: coverage.lcov

